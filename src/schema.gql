# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Author {
  books: [Book!]
  createdAt: Timestamp!
  id: Float!
  name: String!
  phone: String
  updatedAt: Timestamp!
  virtualField: Int!
}

type Book {
  author: Author!
  createdAt: Timestamp!
  id: Float!
  title: String!
  updatedAt: Timestamp!
}

"""new author data"""
input CreateAuthorInput {
  books: [CreateBookInputWithoutAuthor!]
  name: String!
  phone: String
}

"""new book data"""
input CreateBookInputWithAuthor {
  author: CreateAuthorInput!
  title: String!
}

"""new book data"""
input CreateBookInputWithoutAuthor {
  title: String!
}

"""new user data"""
input CreateUserInput {
  email: String!
  name: String!
  password: String!
  phone: String
}

type Mutation {
  createAuthor(data: CreateAuthorInput!): Author!
  createBook(data: CreateBookInputWithAuthor!): Book!
  createUser(data: CreateUserInput!): User!
  deleteAuthor(id: Float!): Int!
  deleteBook(id: Float!): Int!
  deleteUser(id: Float!): Int!
  updateAuthor(data: UpdateAuthorInput!): Author!
  updateBook(data: UpdateBookInput!): Book!
  updateUser(data: UpdateUserInput!): User!
}

type Query {
  authors: [Author!]!
  books: [Book!]!
  sayHello: String!
  users: [User!]!
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

"""update author data"""
input UpdateAuthorInput {
  id: Float!
  name: String
  phone: String
}

"""update book data"""
input UpdateBookInput {
  title: String!
}

"""update user data"""
input UpdateUserInput {
  email: String!
  id: Float!
  name: String
  phone: String
}

type User {
  createdAt: Timestamp!
  email: String!
  id: Float!
  name: String!
  phone: String
  updatedAt: Timestamp!
}
